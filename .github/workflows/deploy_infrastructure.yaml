name: Deploy Infrastructure

on:
  workflow_run:
    workflows: ['Test Infrastructure']
    types:
      - completed

env:
  AWS_REGION : "us-west-1"
  AWS_DEFAULT_OUTPUT: json

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: ${{github.event.workflow_run.conclusion == 'success'}}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Assume AWS IAM Role
        id: configureCreds
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with: 
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
        continue-on-error: true

      - name: Assume Role Failure
        if: steps.configureCreds.outcome == 'failure'
        run: |
          echo "job failed"
          aws sts get-caller-identity
          exit 1
      
      - name: Retrieve tfstate
        id: retrieve
        run: |
          aws s3api get-object --bucket ${{ secrets.S3_URI }} --key ${{ secrets.S3_key }} terraform.tfstate
          base64 -d terraform.tfstate > decoded.tfstate
          echo "filename=decoded.tfstate" >> "$GITHUB_OUTPUT"
      
      - name: Terraform Init
        id: init
        run: terraform init
  
      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve -state=${{ steps.retrieve.outputs.filename }}

      # - name: Terraform Output
      #   id: output
      #   run: terraform output

